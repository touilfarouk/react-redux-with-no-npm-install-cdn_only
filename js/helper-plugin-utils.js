/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/helper-plugin-utils@7.16.7/lib/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function declare(e){return(r,t,o)=>{var s;let i;for(const e of Object.keys(apiPolyfills)){var n;r[e]||(i=null!=(n=i)?n:copyApiObject(r),i[e]=apiPolyfills[e](i))}return e(null!=(s=i)?s:r,t||{},o)}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.declare=declare;const apiPolyfills={assertVersion:e=>r=>{throwVersionError(r,e.version)},targets:()=>()=>({}),assumption:()=>()=>{}};function copyApiObject(e){let r=null;return"string"==typeof e.version&&/^7\./.test(e.version)&&(r=Object.getPrototypeOf(e),!r||has(r,"version")&&has(r,"transform")&&has(r,"template")&&has(r,"types")||(r=null)),Object.assign({},r,e)}function has(e,r){return Object.prototype.hasOwnProperty.call(e,r)}function throwVersionError(e,r){if("number"==typeof e){if(!Number.isInteger(e))throw new Error("Expected string or integer value.");e=`^${e}.0.0-0`}if("string"!=typeof e)throw new Error("Expected string or integer value.");const t=Error.stackTraceLimit;let o;throw"number"==typeof t&&t<25&&(Error.stackTraceLimit=25),o="7."===r.slice(0,2)?new Error(`Requires Babel "^7.0.0-beta.41", but was loaded with "${r}". You'll need to update your @babel/core version.`):new Error(`Requires Babel "${e}", but was loaded with "${r}". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`),"number"==typeof t&&(Error.stackTraceLimit=t),Object.assign(o,{code:"BABEL_VERSION_UNSUPPORTED",version:r,range:e})}
//# sourceMappingURL=/sm/20a196b3fe1b0060cf59dbffd9be08f40d619cf77ec2c587550c3d79b1bb23cc.map